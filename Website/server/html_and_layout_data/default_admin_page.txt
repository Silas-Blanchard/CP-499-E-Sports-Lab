<!DOCTYPE html>
    <html lang="en">
    <head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Computer Availability</title>
    <style type="text/css">

    body{
    background-color:linen;
    }

    h1{
    color:black;
    margin-left: 40px;
    }

    .warning {
        background-color: #D09B2C;
        padding: 10px;
        border-left: 5px solid red;
        margin: 20px 0;
        font-weight: bold;
    }

    .header {
        padding: 10px 5px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: #D09B2C;
        color: white;
    }

    .textbox{
        height:200px;
        width:400px;
        font-size:14pt;
    }

    .logo-container {
        padding-left: 20px;
    }

    .logo {
        height: 80px;
    }

    .header-title {
        flex-grow: 1;
        text-align: center;
        margin: 0;
    }

    .login-button {
        margin-right: 20px;
        background: #f2f2f2;
        border: none;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        cursor: pointer;
        border-radius: 5px;
    }

    .example-text {
    color: #555; /* Darker text for examples */
    background-color: #f8f8f8; /* Light background for the example area */
    padding: 10px;
    border-left: 4px solid #999; /* A left border to highlight it's an example */
    font-family: monospace; /* Monospaced font for code-like examples */
    margin-bottom: 10px;
    }
	
    .selectable{
	    fill: #000F;
        border: 2px solid black;
        outline-style: solid;
    }
    .selectable:hover {
          outline-color: red;
    }

    .computer{
        fill: #080808;
    }

    .wall {
        fill: #000000;
    }

    .decortext {
        fill: #000000;
    }

	#comp-popup {
  		position: fixed;
  		width: 300px;
  		height: 200px;
  		background: white;
  		border: 1px solid black;
  		padding: 10px;
 		margin: auto;
  		top: 0;
  		right: 0;
  		bottom: 0;
  		left: 0;
  		z-index: 10;
  		display: none;
	}

    #wall-popup {
  		position: fixed;
  		width: 300px;
  		height: 300px;
  		background: white;
  		border: 1px solid black;
  		padding: 10px;
 		margin: auto;
  		top: 0;
  		right: 0;
  		bottom: 0;
  		left: 0;
  		z-index: 10;
  		display: none;
	}

    #text-popup {
  		position: fixed;
  		width: 300px;
  		height: 200px;
  		background: white;
  		border: 1px solid black;
  		padding: 10px;
 		margin: auto;
  		top: 0;
  		right: 0;
  		bottom: 0;
  		left: 0;
  		z-index: 10;
  		display: none;
	}

    #new-element {
  		position: fixed;
  		width: 120px;
  		height: 250px;
  		background: white;
  		border: 1px solid black;
  		padding: 10px;
 		margin: auto;
  		top: 0;
  		right: 0;
  		bottom: 0;
  		left: 0;
  		z-index: 10;
  		display: none;
        text-align: center
	}
    </style>

    </head>
        <body>
            <div class="header">
                <div class="logo-container">
                    <img src="https://upload.wikimedia.org/wikipedia/en/thumb/f/ff/Colorado_College_Tigers_logo.svg/800px-Colorado_College_Tigers_logo.svg.png" alt="CC Logo" class="logo" />
                </div>
                <h1 class="header-title">CC Esports Admin Page</h1>
            </div>
            <div class="warning">
                <h2>ADMINS ONLY</h2>
                <p>Changing these files will change the arrangement of the computers, walls, and decortations in the lab!</p>
                <ul>
                    <li>Computer Arrangement Syntax: Computer Name, X Position, Y Position</li>
                    <li>Wall Arrangement Syntax: Wall Name, Starting X, Starting Y, Length, Rotation (Enter TRUE or FALSE or it will break)</li>
                    <li>Decor Arrangement Syntax: Decor Name, Starting X, Starting Y, Width, Height</li>
                    <li>(0,0) meaning X = 0 and Y = 0 is the top left of the screen</li>
                </ul>
            </div>
		        <div id="comp-popup">
  		        <text id="comp-title">Computer</text><br><br>
  		        <form>
                    <label for="xpos">x position:</label>
                    <input type="text" id="xpos" name="xpos"><br><br>
                    <label for="ypos">y position:</label>
                    <input type="text" id="ypos" name="ypos"><br><br>
                    <label for="outta">Out of Order</label>
                    <input type="checkbox" id="order" name="outta"><br><br>
                </form>
                <button id="apply-button">Apply</button>
  		        <button id="close-button">Close</button>
                <button id="delete-button">Delete Element</button>
	        </div>
            </div>
		        <div id="wall-popup">
  		        <text id="wall-title">Editing Wall</text><br><br>
  		        <form>
                    <label for="wallxpos">x position:</label>
                    <input type="text" id="wallxpos" name="wallxpos"><br><br>
                    <label for="wallypos">y position:</label>
                    <input type="text" id="wallypos" name="ypos"><br><br>
                    <label for="wallwidth">Width:</label>
                    <input type="text" id="wallwidth" name="wallwidth"><br><br>
                    <label for="wallheight">Height:</label>
                    <input type="text" id="wallheight" name="wallheight"><br><br>
                </form>
                <button id="wall-apply-button">Apply</button>
  		        <button id="wall-close-button">Close</button>
                <button id="wall-delete-button">Delete Element</button>
	        </div>
            </div>
		        <div id="text-popup">
  		        <text id="text-title">Editing Wall</text><br><br>
  		        <form>
                    <label for="textfield">Text:</label>
                    <input type="text" id="textfield" name="textfield"><br><br>
                    <label for="textxpos">x position:</label>
                    <input type="text" id="textxpos" name="textxpos"><br><br>
                    <label for="textypos">y position:</label>
                    <input type="text" id="textypos" name="textypos"><br><br>
                </form>
                <button id="text-apply-button">Apply</button>
  		        <button id="text-close-button">Close</button>
                <button id="text-delete-button">Delete Element</button>
	        </div>
            </div>
		        <div id="new-element">
  		        <text id="text-title">New Element</text><br><br>
                <button id="new-computer">New Computer</button><br><br>
                <button id="new-wall">New Wall</button><br><br>
                <button id="new-decoration">New Decoration</button><br><br>
                <button id="new-textbox">New Label</button><br><br>
                <button id="cancel-new">Cancel</button><br><br>
	        </div>       
	    ...0...
            <br>
            <button onclick="apply()">Save Changes</button>
            <button onclick="makelement()">Insert New Element</button>
            <button onclick="restore()">Restore Default</button>
        </body>
        
        <script src="/socket.io/socket.io.js"></script>
            <script src="/socket.io/socket.io.js"></script>
            <script>
                // Popup variables
                var popupWindow = document.getElementById("comp-popup");
                var wallpopupWindow = document.getElementById("wall-popup");
                var textpopupWindow = document.getElementById("text-popup");
                var newElementWindow = document.getElementById("new-element");

                //computer editing variables
                var deleteButton = document.getElementById("delete-button");
                var currentitle = document.getElementById("comp-title");
                var showorhide = document.getElementById("order");
                var xfield = document.getElementById("xpos");
                var yfield = document.getElementById("ypos");

                //the wall variables
                var walltitle = document.getElementById("wall-title");
                var wallxfield = document.getElementById("wallxpos");
                var wallyfield = document.getElementById("wallypos");
                //(width and height)
                var wallwfield = document.getElementById("wallwidth");
                var wallhfield = document.getElementById("wallheight");

                //textbox variables!
                var texttitle = document.getElementById("text-title");
                var textxfield = document.getElementById("textxpos");
                var textyfield = document.getElementById("textypos");
                var textstring = document.getElementById("textfield");

                //our buttons for the popups go here
                // Hide the pop-up window when the close button is clicked
                var closeButton = document.getElementById("close-button");
                closeButton.addEventListener("click", function() {
                    popupWindow.style.display = "none";
                });

                // Hide the pop-up window for walls when the wall close button is clicked
                var wallcloseButton = document.getElementById("wall-close-button");
                wallcloseButton.addEventListener("click", function() {
                    wallpopupWindow.style.display = "none";
                });

                //the apply buttons for computers
                var applyButton = document.getElementById("apply-button");
                applyButton.addEventListener("click", function() {
                    popupWindow.style.display = "none";
                    //the element that was clicked is stored in the button, so we are accessing that element
                    var element = document.getElementById(applyButton.dataset.id)

                    element.setAttribute("x", xfield.value)
                    element.setAttribute("y", yfield.value)
                    var newdata = element.id.concat(",".concat(showorhide.checked))
                    element.setAttribute("data-id" , newdata)
                });

                //apply and close buttons for text
                var textcloseButton = document.getElementById("text-close-button");
                textcloseButton.addEventListener("click", function() {
                    textpopupWindow.style.display = "none";
                });

                //the apply buttons for textboxes
                var textapplyButton = document.getElementById("text-apply-button");
                textapplyButton.addEventListener("click", function() {
                    textpopupWindow.style.display = "none";
                    //the element that was clicked is stored in the button, so we are accessing that element
                    var element = document.getElementById(textapplyButton.dataset.id)

                    element.setAttribute("x", textxfield.value)
                    element.setAttribute("y", textyfield.value)
                    element.textContent = textfield.value
                    element.id = textfield.value
                    element.setAttribute("data-id", textfield.value)
                });

                //this defines the behavior of the apply button for walls. Literally just shoves the displayed values into the element the popup came from
                var wallapplyButton = document.getElementById("wall-apply-button");
                wallapplyButton.addEventListener("click", function() {
                    wallpopupWindow.style.display = "none";
                    var element = document.getElementById(wallapplyButton.dataset.id)

                    element.setAttribute("x", wallxfield.value)
                    element.setAttribute("y" , wallyfield.value)
                    element.setAttribute("width" , wallwfield.value)
                    element.setAttribute("height", wallhfield.value)
                });

                // Show the comp-pop-up window when each computer is clicked
                //Also populates the pop-up with the proper values
                document.querySelectorAll('.computer').forEach(function(button) {
                    button.addEventListener('click', function(event) {
                    event.preventDefault();
                    popupWindow.style.display = "block";
                    var values = button.dataset.id.split(',');
                    currentitle.innerText = "Editing " + values[0];
                    xfield.value = button.x.animVal.value
                    yfield.value = button.y.animVal.value
                    if(values[1] == "FALSE" || values[1] == "false"){
                        showorhide.checked = false;
                    }else{
                        showorhide.checked = true;
                    }
                    closeButton.setAttribute('data-id', button.id);
                    applyButton.setAttribute('data-id', button.id);
                    });

                    //the buttons on the popup know which computer they came from.
                });

                // Adds the popup functionality to walls
                document.querySelectorAll('.wall').forEach(function(button) {
                    button.addEventListener('click', function(event) {
                    event.preventDefault();
                    wallpopupWindow.style.display = "block";
                    wallxfield.value = button.x.animVal.value
                    wallyfield.value = button.y.animVal.value
                    wallwidth.value = button.width.animVal.value
                    wallheight.value = button.height.animVal.value

                    //the buttons on the popup know which wall they came from.
                    wallcloseButton.setAttribute('data-id', button.id);
                    wallapplyButton.setAttribute('data-id', button.id);
                    });
                });

                //popups for decor
                document.querySelectorAll('.decor').forEach(function(button) {
                    button.addEventListener('click', function(event) {
                    event.preventDefault();
                    walltitle.innerText = "Editing Decor"
                    wallpopupWindow.style.display = "block";
                    wallxfield.value = button.x.animVal.value
                    wallyfield.value = button.y.animVal.value
                    wallwidth.value = button.width.animVal.value
                    wallheight.value = button.height.animVal.value

                    //the buttons on the popup know decor computer they came from.
                    wallcloseButton.setAttribute('data-id', button.id);
                    wallapplyButton.setAttribute('data-id', button.id);
                    });
                });

                //adding functionality to the textboxes so they can be clicked as well
                document.querySelectorAll('.decortext').forEach(function(button) {
                    button.addEventListener('click', function(event) {
                    event.preventDefault();
                    texttitle.innerText = "Editing Textbox"
                    textpopupWindow.style.display = "block";
                    textxfield.value = button.getAttribute("x")
                    textyfield.value = button.getAttribute("y")
                    textstring.value = button.textContent

                    //the buttons on the popup know decor computer they came from.
                    textcloseButton.setAttribute('data-id', button.id);
                    textapplyButton.setAttribute('data-id', button.id);
                    });
                });

                const socket = io();

                //this function simply loops through all "selectable" objects and sends their values to the server
                function apply() {
                    var output = '';
                    document.querySelectorAll('.selectable').forEach(function(e) {
                        // Get all attributes of the element
                        var attributes = e.attributes;
                        for (var i = 0; i < attributes.length; i++) {
                            output += attributes[i].value + ' ';
                        }
                        output += "\n"
                    });
                    socket.emit('updateComps',output);
                }
                function restore(){
                    socket.emit('restore',output);
                }

                //All of the make new element functionality. 

                function makelement(){
                    var newElementWindow = document.getElementById("new-element");
                    newElementWindow.style.display = "block";
                }
                
                var newcancelbutton = document.getElementById("cancel-new");
                newcancelbutton.addEventListener("click", function() {
                    newElementWindow.style.display = "none";
                });

            </script>
        </html>